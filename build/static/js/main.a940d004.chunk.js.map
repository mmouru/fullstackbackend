{"version":3,"sources":["services/persons.js","components/App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Person","props","persons","map","person","i","key","name","toUpperCase","includes","filter","number","onClick","window","confirm","PersonForm","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","handleFilter","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","useEffect","noteService","event","target","preventDefault","newPerson","some","find","updatedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a940d004.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    //axios.delete(baseUrl + \"/4\")\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n\nconst remove = id => {\n    const request = axios.delete(baseUrl + `/${id}`)\n    return request.then(response => id)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\nexport default { \n  getAll: getAll, \n  create: create, \n  remove: remove,\n  update: update\n}","import React, { useState, useEffect } from 'react'\nimport noteService from '../services/persons'\nimport '../index.css'\n\nconst Person = (props) => {\n    return (\n        <div>\n            {props.persons.map((person, i) =>\n        <div key={i}>\n            {props.persons[i].name.toUpperCase().includes(props.filter.toUpperCase()) === true &&\n            <div>{props.persons[i].name} {props.persons[i].number}\n            <button onClick={() => {\n              if(window.confirm(`Delete ${person.name}`)) {\n                props.delete(person.id)}\n              }\n              }>delete</button></div>}\n        </div>\n        )}\n        </div>\n    )\n}\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.addPerson}>\n        <div>\n          name: <input\n         value={props.newName}\n         onChange={props.handleNameChange}/>\n        </div>\n        <div>number: <input\n        value={props.newNumber}\n        onChange={props.handleNumberChange}>\n        </input>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nconst Filter = (props) => {\n    return (\n        <div>\n          filter shown with<input onChange={props.handleFilter}></input>\n        </div>\n    )\n}\n\nconst Notification = (props) => {\n  if(props.message === null) {\n    return (\n      null\n    )\n  }\n  else if(props.message.includes(\"has already been removed from server\") || props.message.includes(\"Person validation failed\")){\n    return (\n      <div className=\"error\">\n        {props.message}\n      </div>\n    )\n  }\n  else {\n    return (\n      <div className=\"style\">\n        {props.message}\n      </div>\n    )\n  }\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setNewFilter] = useState('')\n  const [ message, setMessage] = useState(null)\n\n  useEffect(() => {\n      noteService.getAll().then(person => {\n        setPersons(person)\n      })\n  }, [])\n\n\n  const addPerson = (event) => {\n      event.preventDefault()\n      const newPerson = { name: newName, number: newNumber }\n      if(persons.some(person => person.name === newName)){\n        const id = persons.find(person => person.name === newName).id\n        const name = persons.find(person => person.id === id).name\n          if(window.confirm(`${newName} is already added to phonebook,\n          replace the old number with a new one?`)){\n            noteService.update(id, newPerson).then(updatedPerson => {\n              setPersons(persons.map(person => person.id !== id ? person : updatedPerson))\n              setMessage(`Updated ${name}`)\n              setTimeout(() => setMessage(null), 3000)\n            }).catch(error => {\n              setMessage(\n                `Information of ${name} has already been removed from server`\n              ) \n              setTimeout(() => {\n                setMessage(null)\n              }, 3000)\n              setPersons(persons.filter(person => person.id !== id))\n            })\n          }\n      } else{\n      noteService.create(newPerson).then(response => {\n        setPersons(persons.concat(response))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`Added ${newPerson.name}`)\n        setTimeout(() => setMessage(null), 3000)\n      })\n      .catch(error => {\n        setNewName('')\n        setNewNumber('')\n        setMessage(error.response.data.error)\n        setTimeout(() => setMessage(null), 3000)\n      })\n    }\n  }\n\n  const deletePerson = id => {\n    noteService.remove(id).then(response => {\n      setPersons(persons.filter(person => person.id !== id))\n      const name = persons.find(person => person.id === id).name\n      setMessage(`deleted user ${name}`)\n      setTimeout(() => setMessage(null), 3000)\n    })\n  }\n  \n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n  }\n  const handleFilter = (event) => {\n      setNewFilter(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <Filter handleFilter={handleFilter}/>\n      <h2>add a new</h2>\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Person filter={filter} persons={persons} delete={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}